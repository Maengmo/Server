서버 
1. Servlet
2. JSP
--------------
3. Spring 

Servlet, 서블릿
- 웹서버측에서 자바를 사용한 프로그램을 동작시키는 기술(환경)
- 목적> 클라이언트 요청에 따른 동작으로 웹페이지를 만들기 위해서!!

여태 수업 페이지(HTML, CSS, JavaScript) > 정적 HTML 페이지 > 캔커피 판매
지금 수업 페이지(자바 > 위의 페이지 생산) > 동적 HTML 페이지 > 바리스타 > 주문


Servlet Class, 서블릿 클래스
- 자바 클래스
- 서블릿 (역할 부여) == 알바생 역할

Servlet Class 작성 규칙
1. 서블릿 클래스 선언
	a. javax.servlet.Servlet 인터페이스를 구현한다. > 복잡합 > 사용X
	b. javax.servlet.http.HttpServlet 클래스를 상속받는다. > 간편함 > 사용**
	
2. doGet/doPost 메소드 선언
	- 둘 중 하나 선언 or 둘 다 선언
	- 클라이언트(브라우저)의 요청이 들어오면 자동으로 호출되는 메소드
	- 동적으로 HTML 페이지를 만드는 역할
	- 메소드 작성 규칙
		a. 매개 변수 작성(2개)
			1. java.servlet.http.HttpServletRequest
			2. java.servlet.http.HttpServletReponse
		b. 예외 미루기
			1. java.io.IOException			//페이지 동적 생성 - 외부 입출력
			2. java.servlet.ServletException //서블릿 작업
			
3. 동적 HTML 문서 작성
	- HttpServletResponse 객체의 getWriter() 메소드 호출 > PrintWriter 객체 반환
	- PrintWriter 객체의 printXXX("<html>") 메소드를 사용 > HTML을 생성
	- 페이지 완성 > 브라우저에게 반환
	
4. 브라우저가 자바 파일(서블릿, 알바생)을 호출할 수 있는 가상 주소 매핑
	- web.xml
	
	
페이지 2장
1. 데이터 전송
	- Ex04.java
2. 데이터 수신
	- Ex04Ok.java
	
POST 요청
1. <form method="POST">
2. XMLHttpRequest(Ajax)

GET 요청
1. <form method="GET">
2. XMLHttpRequest(Ajax)
3. <a href="">
4. location.href
5. F5(새로고침)
6. URL 직접 입력

순수 Servlet 수업 끝 > 개발 환경이 불편함;;


